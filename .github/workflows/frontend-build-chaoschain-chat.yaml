name: Build and Push ChaosChain-Chat Frontend Images to JFrog

on:
  push:
    branches:
      - ci-build  # to be changed to main once everythng looks good

env:
  DOCKER_REGISTRY: nethermind.jfrog.io
  DOCKER_REPO: productsvents-oci-local-dev

permissions:
  id-token: write
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if Docker is installed
      run: |
        if ! command -v docker &> /dev/null
        then
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo apt-get install -y docker-compose
        f
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to JFrog Docker Registry
      run: docker login ${{ env.DOCKER_REGISTRY }} -u ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_USERNAME }} -p ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_TOKEN_DEVELOPER }}

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push frontend image
      uses: docker/build-push-action@v6
      with:
        context: frontend/
        platforms: "linux/arm64"
        push: true
        tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/chaoschain-chat-frontend:${{ github.sha }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/chaoschain-chat-frontend:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

