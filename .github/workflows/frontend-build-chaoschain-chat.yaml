name: Build and Push ChaosChain-Chat Frontend Images to JFrog

on:
  push:
    branches:
      - main
      - test/ci

env:
  DOCKER_REGISTRY: nethermind.jfrog.io
  JFROG_REPOSITORY: productsvents-oci-local-dev
  AGENT_NAME: chaoschain-chat-frontend
  NEXT_PUBLIC_API_URL: https://api.chaoschain-chat.dev-nethermind.xyz/api/chat

permissions:
  id-token: write
  contents: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up ORAS
      uses: oras-project/setup-oras@v1

    - name: Verify ORAS version
      run: oras version

    - name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_TOKEN_DEVELOPER }}

    - name: Login to registry with ORAS
      run: |
        oras login ${{ env.DOCKER_REGISTRY }} \
          -u ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_USERNAME }} \
          -p ${{ secrets.ARTIFACTORY_PRODUCTSVENTS_TOKEN_DEVELOPER }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: "linux/arm64"
        push: true
        file: ./frontend/Dockerfile
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.JFROG_REPOSITORY }}/${{ env.AGENT_NAME }}:${{ github.sha }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.JFROG_REPOSITORY }}/${{ env.AGENT_NAME }}:latest
        # cache-from: type=gha
        # cache-to: type=gha,mode=max
        build-args: |
          GITHUB_SHA=${{ github.sha }}
          NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}
